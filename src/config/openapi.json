{
    "openapi": "3.0.0",
    "info": {
      "title": "Backend API",
      "description": "Backend API",
      "version": "1.0.0"
    },
    "host": "http://localhost:3000",
    "basePath": "/",
    "schemes": ["http"],
    "produces": ["application/json"],
    "paths": {
      "/register": {
        "post": {
          "tags": ["authentication"],
          "summary": "Creates a new user",
          "requestBody": {
            "description": "User information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInput"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "New user record with ID",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "$ref": "#/components/schemas/UserResponse"
                      },
                      "token": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/verify/{token}": {
        "get": {
          "tags": ["authentication"],
          "summary": "Activates user and logs them in if valid, redirecting to configured URL",
          "parameters": [
            {
              "name": "token",
              "in": "path",
              "description": "JWT token received in email link",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User record and JWT auth token that expires in 1 hour",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "$ref": "#/components/schemas/UserResponse"
                      },
                      "token": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/login": {
        "post": {
          "tags": ["authentication"],
          "summary": "Authenticates user and generates new JWT auth token",
          "requestBody": {
            "description": "User login credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogin"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User record and JWT auth token that expires in 1 hour",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/lost-password": {
        "post": {
          "tags": ["authentication"],
          "summary": "Emails new magic link to log user in if found",
          "requestBody": {
            "description": "Email address for valid user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailInput"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Confirmation and prompt to check email (TODO)",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LostPasswordResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/impersonate/{id}": {
        "post": {
          "tags": ["authentication"],
          "summary": "Authenticates as surrogate user and generates new JWT auth token",
          "security": [
            {"bearerAuth": []}
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of user to impersonate",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User record and JWT auth token that expires in 1 hour",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "$ref": "#/components/schemas/UserResponse"
                      },
                      "token": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/logout": {
        "post": {
          "tags": ["authentication"],
          "summary": "Disables user token from subsequent access",
          "security": [
            {"bearerAuth": []}
          ],
          "responses": {
            "200": {
              "description": "Success flag",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LogoutResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/tokens/{tokenId}": {
        "delete": {
          "tags": ["authentication"],
          "summary": "Deletes specific token if exists",
          "security": [
            {"bearerAuth": []}
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of token that needs deleted",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Confirmation of successful operation"
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/roles/{id}": {
        "get": {
          "tags": ["roles"],
          "summary": "Returns a role if exists",
          "security": [
            {"bearerAuth": []}
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of record that needs retrieved",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A copy of the requested role",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/roles/{id}/permissions": {
        "get": {
          "tags": ["roles"],
          "summary": "Returns a list of roles permissions",
          "security": [
            {"bearerAuth": []}
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of role record that needs permissions retrieved",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of permissions for the role",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PermissionResponse"
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": ["roles"],
          "summary": "Adds a permission for role",
          "security": [
            {"bearerAuth": []}
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of role record that permission will be added",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Permission data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionInput"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A copy of the created role with ID",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/users/{id}": {
        "get": {
          "tags": ["users"],
          "summary": "Returns a user if exists",
          "security": [
            {"bearerAuth": []}
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of record that needs retrieved (optionally with nested roles if allowed)",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "User data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInput"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A copy of the requested user",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": ["users"],
          "summary": "Updates a user if exists",
          "security": [
            {"bearerAuth": []}
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of record that needs updated",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "User data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInput"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A copy of the updated user",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/users/{id}/roles": {
        "get": {
          "tags": ["users"],
          "summary": "Returns a list of users roles",
          "security": [
            {"bearerAuth": []}
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of user record that needs roles retrieved",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of roles assigned to user",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RoleResponse"
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/users/{id}/tokens": {
        "get": {
          "tags": ["users"],
          "summary": "Returns a list of users tokens",
          "security": [
            {"bearerAuth": []}
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of record that needs retrieved (optionally with nested roles if allowed)",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A copy of the requested user",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": ["users"],
          "summary": "Deletes all user tokens",
          "security": [
            {"bearerAuth": []}
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of user that needs tokens deleted",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Confirmation of successful operation"
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/users/{id}/tokens/{tokenId}": {
        "delete": {
          "tags": ["users"],
          "summary": "Deletes specific user token if exists",
          "security": [
            {"bearerAuth": []}
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of user that needs tokens deleted",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tokenId",
              "in": "path",
              "description": "ID of token that needs deleted",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Confirmation of successful operation"
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/skills": {
        "get": {
          "summary": "skills",
          "tags": [],
          "responses": {
            "200": {
              "description": "OK"
            },
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          },
          "operationId": "get-skiils",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example-get skill": {
                    "value": {
                      "id": "string",
                      "skillName": "string",
                      "expMonth": 0,
                      "expYear": 0,
                      "workMostly": true,
                      "workWouldlike": true,
                      "userId": "string"
                    }
                  }
                }
              }
            },
            "description": ""
          },
          "description": "",
          "parameters": [
            {
              "schema": {
                "type": "string"
              },
              "in": "query",
              "name": "id",
              "description": ""
            }
          ]
        },
        "post": {
          "summary": "",
          "operationId": "post-skiils",
          "responses": {
            "200": {
              "description": "OK"
            },
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "skillname": {
                      "type": "string"
                    },
                    "expYear": {
                      "type": "integer"
                    },
                    "expMonth": {
                      "type": "integer"
                    },
                    "workWouldlike": {
                      "type": "boolean"
                    },
                    "workMostly": {
                      "type": "boolean"
                    },
                    "userId": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "post example": {
                    "value": {
                      "id": "string",
                      "skillname": "string",
                      "expYear": 0,
                      "expMonth": 0,
                      "workWouldlike": true,
                      "workMostly": true,
                      "userId": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "summary": "",
          "operationId": "delete-skiils",
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "parameters": [
            {
              "schema": {
                "type": "string"
              },
              "in": "query",
              "name": "id"
            }
          ]
        },
        "parameters": []
      },
      "/skills/{id}" : {
        "get": {
          "tags" : ["skills"],
          "summary":"Returns a list of skills",
          "security": [
            {"bearerAuth": []}
          ],
          "parameters" :[
            {
              "name" : "id",
              "in" :"path",
              "description" :"ID of record that needs retrieved",
              "required" : true,
              "schema": {
                "type" : "string"
              }
            }
          ],
          "responses" : {
            "200" : {
              "description" :"A copy of the requested skill",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/SkillResponse"
                  }
                }
              }
            },
            "default":{
              "description" : "Unexpected error",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/search": {
        "get": {
          "tags": ["search"],
          "summary": "Search by places using opencagedata service",
          "security": [
            {"bearerAuth": []}
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad request"
            }
          },
          "content": {
            "application/json": {}
          },
          "parameters": [
            {
              "name": "q",
              "in": "query",
              "description": "Specifies the query string",
              "required": true,
              "type": "string"
            }
          ]
        }
      },
      "/health": {
        "get": {
          "tags": ["systems"],
          "summary": "Returns success if app running",
          "responses": {
            "200": {
              "description": "A successful status code to indicate app is running"
            },
            "default": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Role": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "permissions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "RoleInput": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          }
        },
        "RoleAddInput": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "RoleResponse": {
          "type": "object",
          "required": [
            "data",
            "message"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Role"
            },
            "meta": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "integer"
                },
                "took": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorModel"
              }
            },
            "message": {
              "type": "string"
            } 
          }
        },
        "Permission": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "role": {
              "type": "string"
            },
            "resource": {
              "type": "string"
            },
            "action": {
              "type": "string"
            },
            "attributes": {
              "type": "string"
            }
          }
        },
        "PermissionInput": {
          "type": "object",
          "properties": {
            "role": {
              "type": "string"
            },
            "resource": {
              "type": "string"
            },
            "action": {
              "type": "string"
            },
            "attributes": {
              "type": "string"
            }
          }
        },
        "PermissionResponse": {
          "type": "object",
          "required": [
            "data",
            "message"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Permission"
            },
            "meta": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "integer"
                },
                "took": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorModel"
              }
            },
            "message": {
              "type": "string"
            } 
          }
        },
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "avatar": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "age": {
              "type": "integer",
              "format": "int64"
            },
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "timeZone": {
              "type": "string"
            },
            "language": {
              "type": "string"
            },
            "ip": {
              "type": "string"
            },
            "roles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "UserInput": {
          "type": "object",
          "properties": {
            "avatar": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "age": {
              "type": "integer",
              "format": "int64"
            },
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "timeZone": {
              "type": "string"
            },
            "language": {
              "type": "string"
            },
            "ip": {
              "type": "string"
            }
          }
        },
        "UserLogin": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "UserFlag": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "goalIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "UserResponse": {
          "type": "object",
          "required": [
            "data",
            "message"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/User"
            },
            "meta": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "integer"
                },
                "took": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorModel"
              }
            },
            "message": {
              "type": "string"
            } 
          }
        },
        "UserFlagResponse": {
          "type": "object",
          "required": [
            "data",
            "message"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/UserFlag"
            },
            "meta": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "integer"
                },
                "took": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorModel"
              }
            },
            "message": {
              "type": "string"
            } 
          }
        },
        "EmailInput": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            }
          }
        },
        "Variant": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "weight": {
              "type": "integer"
            },
            "goalIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "Rule": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["field", "localDate", "localTime"]
            },
            "expression": {
              "type": "string"
            }
          }
        },
        "Environment": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "enabled": {
              "type": "boolean"
            },
            "targetEmails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "segmentIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "variantIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "Activity": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "action": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "resource": {
              "type": "string"
            },
            "actor": {
              "$ref": "#/components/schemas/User"
            },
            "object": {
              "type": "object"
            },
            "target": {
              "type": "object"
            },
            "origin": {
              "type": "object"
            },
            "result": {
              "type": "object"
            },
            "timestamp": {
              "type": "number"
            },
            "published": {
              "type": "string"
            },
            "host": {
              "type": "string"
            }
          }
        },
        "ActivityResponse": {
          "type": "object",
          "required": [
            "data",
            "message"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Activity"
            },
            "meta": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "integer"
                },
                "took": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorModel"
              }
            },
            "message": {
              "type": "string"
            } 
          }
        },
        "LostPasswordResponse": {
          "type": "object",
          "required": [
            "data",
            "message"
          ],
          "properties": {
            "data": {
              "type": "object"
            },
            "meta": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "integer"
                },
                "took": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorModel"
              }
            },
            "message": {
              "type": "string"
            } 
          }
        },
        "LoginResponse": {
          "type": "object",
          "required": [
            "data",
            "message"
          ],
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User"
                },
                "token": {
                  "type": "string"
                }
              }
            },
            "meta": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "integer"
                },
                "took": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorModel"
              }
            },
            "message": {
              "type": "string"
            } 
          }
        },
        "LogoutResponse": {
          "type": "object",
          "required": [
            "data",
            "message"
          ],
          "properties": {
            "data": {
              "type": "object"
            },
            "meta": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "integer"
                },
                "took": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorModel"
              }
            },
            "message": {
              "type": "string"
            } 
          }
        },
        "ErrorResponse": {
          "type": "object",
          "required": [
            "errors",
            "message"
          ],
          "properties": {
            "data": {
              "type": "object"
            },
            "meta": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "integer"
                },
                "took": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorModel"
              }
            },
            "message": {
              "type": "string"
            } 
          }
        },
        "ErrorModel": {
          "type": "object",
          "required": [
            "message",
            "status"
          ],
          "properties": {
            "message": {
              "type": "string"
            },
            "status": {
              "type": "integer",
              "minimum": 100,
              "maximum": 600
            }
          }
        }
      },
      "responses": {},
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
  